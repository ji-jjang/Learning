// Mocks generated by Mockito 5.4.5 from annotations
// in webtoon/test/webtoon_view_model_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:webtoon/domain/webtoon/models/webtoon_detail_model.dart' as _i2;
import 'package:webtoon/domain/webtoon/models/webtoon_episode_model.dart'
    as _i6;
import 'package:webtoon/domain/webtoon/models/webtoon_model.dart' as _i5;
import 'package:webtoon/services/api_service.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeWebtoonDetailModel_0 extends _i1.SmartFake
    implements _i2.WebtoonDetailModel {
  _FakeWebtoonDetailModel_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [IApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockIApiService extends _i1.Mock implements _i3.IApiService {
  MockIApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i5.WebtoonModel>> getTodayToon() =>
      (super.noSuchMethod(
            Invocation.method(#getTodayToon, []),
            returnValue: _i4.Future<List<_i5.WebtoonModel>>.value(
              <_i5.WebtoonModel>[],
            ),
          )
          as _i4.Future<List<_i5.WebtoonModel>>);

  @override
  _i4.Future<_i2.WebtoonDetailModel> getToonById(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getToonById, [id]),
            returnValue: _i4.Future<_i2.WebtoonDetailModel>.value(
              _FakeWebtoonDetailModel_0(
                this,
                Invocation.method(#getToonById, [id]),
              ),
            ),
          )
          as _i4.Future<_i2.WebtoonDetailModel>);

  @override
  _i4.Future<List<_i6.WebtoonEpisodeModel>> getLatestEpisodesById(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getLatestEpisodesById, [id]),
            returnValue: _i4.Future<List<_i6.WebtoonEpisodeModel>>.value(
              <_i6.WebtoonEpisodeModel>[],
            ),
          )
          as _i4.Future<List<_i6.WebtoonEpisodeModel>>);
}
